<?php
 use App\Models\material_stock; use App\Models\products; use App\Models\purchase_details; use App\Models\ref; use App\Models\sale_details; use App\Models\stock; use Carbon\Carbon; use Illuminate\Support\Facades\DB; goto ZOC17; OlX9s: function avgSalePrice($from, $to, $id) { $sales = sale_details::where("\160\162\157\x64\x75\x63\164\111\104", $id); if ($from != "\141\x6c\154" && $to != "\x61\154\154") { $sales->whereBetween("\x64\x61\x74\145", array($from, $to)); } $sales_amount = $sales->sum("\x74\151"); $sales_qty = $sales->sum("\x71\164\x79"); if ($sales_qty > 0) { $sale_price = $sales_amount / $sales_qty; } else { $sale_price = 0; } return $sale_price; } goto PePI5; ZOC17: function getRef() { $ref = ref::first(); if ($ref) { $ref->ref = $ref->ref + 1; } else { $ref = new ref(); $ref->ref = 1; } $ref->save(); dashboard(); return $ref->ref; } goto BAaLe; TQRNn: function lastDayOfMonth() { $endOfMonth = Carbon::now()->endOfMonth(); return $endOfMonth->format("\x59\x2d\x6d\55\x64"); } goto TPDHk; FuLWM: function createStock($id, $cr, $db, $date, $notes, $ref) { stock::create(array("\160\x72\x6f\144\x75\143\164\111\x44" => $id, "\143\162" => $cr, "\x64\x62" => $db, "\144\x61\x74\x65" => $date, "\x6e\x6f\164\145\163" => $notes, "\x72\145\x66\x49\x44" => $ref)); } goto il8kN; rjUUR: function lastDayOfCurrentYear() { $endOfYear = Carbon::now()->endOfYear(); return $endOfYear->format("\x59\55\x6d\x2d\x64"); } goto t733s; TPDHk: function firstDayOfCurrentYear() { $startOfYear = Carbon::now()->startOfYear(); return $startOfYear->format("\131\x2d\155\x2d\x64"); } goto rjUUR; IA6kp: function productStockValue($id) { $stock = getStock($id); $price = avgPurchasePrice("\x61\154\x6c", "\x61\154\x6c", $id); dashboard(); return $price * $stock; } goto Tzr2c; il8kN: function getStock($id) { $stocks = stock::where("\x70\162\157\144\x75\143\164\111\104", $id)->get(); $balance = 0; foreach ($stocks as $stock) { $balance += $stock->cr; $balance -= $stock->db; } return $balance; } goto OlX9s; Y67nM: function lastDayOfPreviousYear() { $endOfPreviousYear = Carbon::now()->subYear()->endOfYear(); return $endOfPreviousYear->format("\x59\x2d\x6d\x2d\144"); } goto FuLWM; t733s: function firstDayOfPreviousYear() { $startOfPreviousYear = Carbon::now()->subYear()->startOfYear(); return $startOfPreviousYear->format("\131\55\x6d\x2d\144"); } goto Y67nM; PePI5: function avgPurchasePrice($from, $to, $id) { $purchases = purchase_details::where("\160\x72\x6f\144\165\143\164\111\104", $id); if ($from != "\141\x6c\x6c" && $to != "\141\154\x6c") { $purchases->whereBetween("\144\x61\164\145", array($from, $to)); } $purchase_amount = $purchases->sum("\141\x6d\157\165\156\164"); $purchase_qty = $purchases->sum("\161\x74\x79"); if ($purchase_qty > 0) { $purchase_price = $purchase_amount / $purchase_qty; } else { $purchase_price = 0; } return $purchase_price; } goto wnQrn; BAaLe: function firstDayOfMonth() { $startOfMonth = Carbon::now()->startOfMonth(); return $startOfMonth->format("\131\55\155\55\x64"); } goto TQRNn; wnQrn: function stockValue() { $products = products::all(); $value = 0; foreach ($products as $product) { $value += productStockValue($product->id); } return $value; } goto IA6kp; Tzr2c: function calculateGrowthPercentage($oldValue, $newValue) { if ($oldValue == 0) { return $newValue > 0 ? 100 : 0; } $growthPercentage = ($newValue - $oldValue) / $oldValue * 100; return $growthPercentage; }